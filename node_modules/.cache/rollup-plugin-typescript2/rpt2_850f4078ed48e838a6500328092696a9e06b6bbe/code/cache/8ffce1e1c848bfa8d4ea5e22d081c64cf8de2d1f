{"code":"import { CMDData } from \"../CMDData\";\r\nimport { Task } from \"../drongo/task/Task\";\r\nimport * as path from \"path\";\r\nimport { DrongoEvent } from \"../drongo/events/DrongoEvent\";\r\n/**\r\n * 计算有多少需要压缩的图片\r\n */\r\nexport class CalculateImageListTask extends Task {\r\n    constructor() {\r\n        super();\r\n    }\r\n    start(data) {\r\n        this.buildFileList();\r\n    }\r\n    buildFileList() {\r\n        let assetsPath = CMDData.data.input;\r\n        let result = [];\r\n        //对比MD5得出那些文件需要重新生成\r\n        let currentFile;\r\n        let oldFile;\r\n        for (let index = 0; index < this.fileMD5List.length; index++) {\r\n            currentFile = this.fileMD5List[index];\r\n            //老的列表中没有，说明是新的\r\n            if (!this.oldFileConfigMap.has(currentFile.file)) {\r\n                result.push({\r\n                    file: currentFile.file,\r\n                    quality: this.getQuality(currentFile.file),\r\n                    md5: currentFile.md5\r\n                });\r\n                continue;\r\n            }\r\n            oldFile = this.oldFileConfigMap.get(currentFile.file);\r\n            //如果再自定义列表中\r\n            if (this.customQualityMap.has(currentFile.file)) {\r\n                const customQualtiy = this.customQualityMap.get(currentFile.file);\r\n                //如果自定义品质和上次的品质不同则需要重新构建\r\n                if (oldFile.quality != customQualtiy) {\r\n                    result.push({\r\n                        file: currentFile.file,\r\n                        quality: customQualtiy,\r\n                        md5: currentFile.md5\r\n                    });\r\n                    continue;\r\n                }\r\n            }\r\n            oldFile = this.oldFileConfigMap.get(currentFile.file);\r\n            //MD5不相同\r\n            if (currentFile.md5 !== oldFile.md5) {\r\n                result.push({\r\n                    file: currentFile.file,\r\n                    quality: this.getQuality(currentFile.file),\r\n                    md5: currentFile.md5\r\n                });\r\n                continue;\r\n            }\r\n        }\r\n        //赋值\r\n        CMDData.data.imageList = result;\r\n        console.log(\"经过计算本次需要处理：\" + result.length + \"个图片!\");\r\n        this.dispatchEvent(DrongoEvent.COMPLETE);\r\n    }\r\n    getQuality(fileRelativePath) {\r\n        //如果直接找到了自定义品质\r\n        if (this.customQualityMap.has(fileRelativePath)) {\r\n            return this.customQualityMap.get(fileRelativePath);\r\n        }\r\n        //递归父容器是否定义了品质\r\n        let dirName = path.dirname(fileRelativePath);\r\n        while (true) {\r\n            //如果父级文件夹定义了品质\r\n            if (this.customQualityMap.has(dirName)) {\r\n                return this.customQualityMap.get(dirName);\r\n            }\r\n            dirName = path.dirname(dirName);\r\n            if (dirName == \".\") {\r\n                break;\r\n            }\r\n        }\r\n        return CMDData.data.defaultQuality;\r\n    }\r\n    get fileMD5List() {\r\n        return CMDData.data.fileMD5List;\r\n    }\r\n    get oldFileConfigMap() {\r\n        return CMDData.data.fileConfigs;\r\n    }\r\n    get customQualityMap() {\r\n        return CMDData.data.customQualityMap;\r\n    }\r\n}\r\n","references":["D:/DefinitionTool/src/CMDData.ts","D:/DefinitionTool/src/drongo/task/Task.ts","D:/DefinitionTool/src/drongo/events/DrongoEvent.ts"]}
