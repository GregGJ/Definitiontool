{"code":"import * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport * as child_process from \"child_process\";\r\nconst images = require(\"../node_modules/images/index\");\r\nexport class ImageCompressor {\r\n    /**\r\n     * @param workCount 同时工作的线程数量\r\n     */\r\n    constructor(workCount = 5) {\r\n        this.__workIndex = 0;\r\n        this.__workCount = 5;\r\n        this.__workCount = workCount;\r\n    }\r\n    start(assetsPath, lowDefinitionAssets, fileList, fileConfigMap, callBack) {\r\n        this.__assetsPath = assetsPath;\r\n        this.__LDAssetsPath = lowDefinitionAssets;\r\n        this.__fileList = fileList;\r\n        this.__fileConfigMap = fileConfigMap;\r\n        this.__callBack = callBack;\r\n        this.tryNexts();\r\n    }\r\n    tryNexts() {\r\n        var _a, _b;\r\n        if (this.__fileList && this.__fileList.length != 0) {\r\n            let file;\r\n            let extname;\r\n            while (this.__workIndex < this.__workCount) {\r\n                file = this.__fileList.shift();\r\n                extname = path.extname(file.file);\r\n                extname.toLocaleLowerCase();\r\n                if (extname == \".png\") {\r\n                    this.__pngCompress(file);\r\n                }\r\n                else {\r\n                    this.__jpgCompress(file);\r\n                }\r\n                this.__workIndex++;\r\n            }\r\n        }\r\n        else {\r\n            //结束\r\n            if (this.__callBack) {\r\n                this.__callBack();\r\n            }\r\n        }\r\n        if (((_a = this.__fileList) === null || _a === void 0 ? void 0 : _a.length) == 0) {\r\n            console.trace(\"tryNexts\");\r\n        }\r\n        console.log(\"图片压缩中：\" + ((_b = this.__fileList) === null || _b === void 0 ? void 0 : _b.length));\r\n    }\r\n    __pngCompress(file, speed = 3) {\r\n        let input = this.__assetsPath + \"/\" + file.file;\r\n        let output = this.__LDAssetsPath + \"/\" + file.file;\r\n        //压缩产生的文件名\r\n        let m_fileName = file.file.replace(\".png\", \"\") + \"-m.png\";\r\n        let cmd = ImageCompressor.Png_Compress_exe;\r\n        cmd += \" --quality \" + file.quality;\r\n        cmd += \" --speed \" + speed;\r\n        cmd += \" --force\";\r\n        cmd += \" --ext -m.png\";\r\n        cmd += \" \" + input;\r\n        child_process.exec(cmd, (err, data) => {\r\n            if (err) {\r\n                if (err.message.indexOf(\"Not a PNG file\") >= 0) {\r\n                    console.log(\"警告！这个文件不是png,但后缀却是png:\" + file.file);\r\n                }\r\n                else {\r\n                    // console.log(\"压缩比不足！使用原文件:\"+input);\r\n                    this.mkDirbyFile(output);\r\n                    fs.copyFileSync(input, output);\r\n                }\r\n            }\r\n            else {\r\n                this.mkDirbyFile(output);\r\n                fs.renameSync(this.__assetsPath + \"/\" + m_fileName, output);\r\n                this.__fileConfigMap.set(file.file, file);\r\n            }\r\n            this.__workIndex--;\r\n            this.tryNexts();\r\n        });\r\n    }\r\n    __jpgCompress(file) {\r\n        let output = this.__LDAssetsPath + \"/\" + file.file;\r\n        this.mkDirbyFile(output);\r\n        let quality;\r\n        if (file.quality.indexOf(\"-\") >= 0) {\r\n            let arr = file.quality.split(\"-\");\r\n            quality = Number(arr[0]);\r\n        }\r\n        else {\r\n            quality = Number(file.quality);\r\n        }\r\n        images(this.__assetsPath + \"/\" + file.file).save(output, { quality: quality });\r\n        this.__fileConfigMap.set(file.file, file);\r\n        this.__workIndex--;\r\n        this.tryNexts();\r\n    }\r\n    /**\r\n     * 递归创建所有父级文件夹\r\n     * @param file\r\n     */\r\n    mkDirbyFile(file) {\r\n        file = path.resolve(file);\r\n        file = file.replace(/\\\\/g, \"/\");\r\n        const fileName = file.split(\"/\")[file.split(\"/\").length - 1];\r\n        file = file.replace(fileName, \"\");\r\n        fs.mkdirSync(file, { recursive: true });\r\n    }\r\n}\r\nImageCompressor.Png_Compress_exe = \"D:/erciyuan/clientCS/GameWord/definitions/pngquant.exe\";\r\n","references":["D:/DefinitionTool/node_modules/images/index.d.ts"]}
